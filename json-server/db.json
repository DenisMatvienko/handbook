{
  "posts": [
    {
      "id": "1",
      "title": "json-server",
      "author": "typicode"
    }
  ],
  "articles": [
    {
      "id": "1",
      "title": "Управление памятью в JavaScript",
      "subtitle": "Управление памятью и принципах работы сборщика мусора, а также о том, как избежать самых распространенных видов утечек памяти.",
      "img": "https://media.proglib.io/wp-uploads/2018/06/jhkhk.jpg",
      "views": 1022,
      "createdAt": "19.09.2023",
      "userId": "1",
      "type": [
        "IT",
        "JS",
        "Architecture"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Стек и куча",
          "paragraphs": [
            "В JavaScript есть два варианта хранения данных: в стеке и в куче; и то, и другое – названия структур данных, которые используются движком для различных целей."
          ]
        },
        {
          "id": "4",
          "type": "CODE",
          "code": "\nconst person = {\n  name: 'John',\n  age: 24,\n};\n\n// JavaScript выделяет память под этот объект в куче. \n// Сами же значения являются примитивными, поэтому храниться они будут в стеке.\n\nconst hobbies = ['hiking', 'reading'];\n\n// Массивы – тоже объекты, значит, они сохраняются в куче.\n\nlet name = 'John'; // выделяет память для строки\nconst age = 24; // выделяет память для числа\nname = 'John Doe'; // выделяет память для новой строки\nconst firstName = name.slice(0,4); // выделяет память для новой строки\n\n// Примитивные значения по своей природе иммутабельны: вместо того, чтобы изменить начальное значение,\n// JavaScript создает еще одно."
        },
        {
          "id": "5",
          "type": "TEXT",
          "title": "Ссылки в JavaScript",
          "paragraphs": [
            "Все переменные в первую очередь указывают на стек. В случае, если значение не является примитивным, в стеке содержится ссылка на объект из кучи.\n\nВ куче нет какого-либо определенного порядка, в связи с чем ссылка на нужную нам область памяти должна храниться в стеке: в этом смысле объект в куче похож на дом, а ссылка – на его адрес."
          ]
        },
        {
          "id": "2",
          "type": "IMAGE",
          "src": "https://webformyself.com/wp-content/uploads/2018/96/1.jpg",
          "title": "Рис. 1 - Распределение памяти во взаимодействии с Event Loop"
        },
        {
          "id": "4",
          "type": "CODE",
          "code": "\nconst person = {\n  name: 'John',\n  age: 24,\n};\n\n// JavaScript выделяет память под этот объект в куче. \n// Сами же значения являются примитивными, поэтому храниться они будут в стеке.\n\nconst hobbies = ['hiking', 'reading'];\n\n// Массивы – тоже объекты, значит, они сохраняются в куче.\n\nlet name = 'John'; // выделяет память для строки\nconst age = 24; // выделяет память для числа\nname = 'John Doe'; // выделяет память для новой строки\nconst firstName = name.slice(0,4); // выделяет память для новой строки\n\n// Примитивные значения по своей природе иммутабельны: вместо того, чтобы изменить начальное значение,\n// JavaScript создает еще одно."
        },
        {
          "id": "3",
          "type": "IMAGE",
          "src": "https://webformyself.com/wp-content/uploads/2018/96/1.jpg",
          "title": "Рис. 2 - Распределение памяти во взаимодействии с Event Loop"
        },
        {
          "id": "6",
          "type": "TEXT",
          "title": "Ссылки в JavaScript",
          "paragraphs": [
            "Все переменные в первую очередь указывают на стек. В случае, если значение не является примитивным, в стеке содержится ссылка на объект из кучи.\n\nВ куче нет какого-либо определенного порядка, в связи с чем ссылка на нужную нам область памяти должна храниться в стеке: в этом смысле объект в куче похож на дом, а ссылка – на его адрес."
          ]
        },
        {
          "id": "4",
          "type": "IMAGE",
          "src": "https://webformyself.com/wp-content/uploads/2018/96/1.jpg",
          "title": "Рис. 3 - Распределение памяти во взаимодействии с Event Loop"
        }
      ]
    },
    {
      "id": "2",
      "title": "Мемоизация React.js",
      "subtitle": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
      "img": "https://frontendmasters.com/static-assets/learn/og-learning-path-react.jpg",
      "views": 1022,
      "createdAt": "19.09.2023",
      "userId": "2",
      "type": [
        "IT",
        "JS",
        "Architecture"
      ],
      "blocks": [
        {
          "id": "5",
          "type": "TEXT",
          "title": "Ссылки в JavaScript",
          "paragraphs": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."
          ]
        },
        {
          "id": "2",
          "type": "IMAGE",
          "src": "https://webformyself.com/wp-content/uploads/2018/96/1.jpg",
          "title": "Рис. 1 - Распределение памяти во взаимодействии с Event Loop"
        },
        {
          "id": "4",
          "type": "CODE",
          "code": "\nconst person = {\n  name: 'John',\n  age: 24,\n};\n\n// JavaScript выделяет память под этот объект в куче. \n// Сами же значения являются примитивными, поэтому храниться они будут в стеке.\n\nconst hobbies = ['hiking', 'reading'];\n\n// Массивы – тоже объекты, значит, они сохраняются в куче.\n\nlet name = 'John'; // выделяет память для строки\nconst age = 24; // выделяет память для числа\nname = 'John Doe'; // выделяет память для новой строки\nconst firstName = name.slice(0,4); // выделяет память для новой строки\n\n// Примитивные значения по своей природе иммутабельны: вместо того, чтобы изменить начальное значение,\n// JavaScript создает еще одно."
        }
      ]
    },
    {
      "id": "3",
      "title": "Сложность алгоритмов",
      "subtitle": "Алгоритм - это программа, которая представляет из себя исключительное вычисление",
      "img": "https://www.lavivienpost.com/wp-content/uploads/2022/07/algorithms1.jpg",
      "views": 1022,
      "createdAt": "19.09.2023",
      "userId": "2",
      "type": [
        "IT",
        "JS",
        "Architecture"
      ],
      "blocks": [
        {
          "id": "5",
          "type": "TEXT",
          "title": "Ссылки в JavaScript",
          "paragraphs": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."
          ]
        },
        {
          "id": "2",
          "type": "IMAGE",
          "src": "https://webformyself.com/wp-content/uploads/2018/96/1.jpg",
          "title": "Рис. 1 - Распределение памяти во взаимодействии с Event Loop"
        },
        {
          "id": "4",
          "type": "CODE",
          "code": "\nconst person = {\n  name: 'John',\n  age: 24,\n};\n\n// JavaScript выделяет память под этот объект в куче. \n// Сами же значения являются примитивными, поэтому храниться они будут в стеке.\n\nconst hobbies = ['hiking', 'reading'];\n\n// Массивы – тоже объекты, значит, они сохраняются в куче.\n\nlet name = 'John'; // выделяет память для строки\nconst age = 24; // выделяет память для числа\nname = 'John Doe'; // выделяет память для новой строки\nconst firstName = name.slice(0,4); // выделяет память для новой строки\n\n// Примитивные значения по своей природе иммутабельны: вместо того, чтобы изменить начальное значение,\n// JavaScript создает еще одно."
        }
      ]
    }
  ],
  "comments": [
    {
      "id": "1",
      "text": "some comment",
      "articleId": "1",
      "userId": "1"
    },
    {
      "id": "2",
      "text": "some comment 2",
      "articleId": "1",
      "userId": "1"
    },
    {
      "id": "3",
      "text": "some comment 3",
      "articleId": "1",
      "userId": "1"
    },
    {
      "id": "4",
      "text": "cringe",
      "articleId": "1",
      "userId": "2"
    },
    {
      "articleId": "1",
      "userId": "1",
      "text": "abobus",
      "id": "rZ1fXm0"
    },
    {
      "articleId": "1",
      "userId": "2",
      "text": "skuf",
      "id": "4MMHqqP"
    },
    {
      "articleId": "1",
      "userId": "2",
      "text": "2114",
      "id": "4sM5OFI"
    },
    {
      "articleId": "1",
      "userId": "2",
      "text": "hello",
      "id": "OMIbf8V"
    },
    {
      "articleId": "1",
      "userId": "1",
      "text": "den",
      "id": "vXird6I"
    },
    {
      "articleId": "1",
      "userId": "1",
      "text": "12122",
      "id": "fNVo-7D"
    },
    {
      "articleId": "1",
      "userId": "1",
      "text": "123123",
      "id": "fE91gH6"
    },
    {
      "articleId": "1",
      "userId": "1",
      "text": "adasd",
      "id": "Oa8fi2b"
    },
    {
      "articleId": "1",
      "userId": "1",
      "text": "hello",
      "id": "-RhDHum"
    },
    {
      "articleId": "1",
      "userId": "1",
      "text": "adasdasd",
      "id": "6ZYGXpF"
    },
    {
      "articleId": "1",
      "userId": "1",
      "text": "asdad",
      "id": "AAKlh4v"
    },
    {
      "articleId": "1",
      "userId": "1",
      "text": "213123213123",
      "id": "IdlbWWo"
    },
    {
      "articleId": "1",
      "userId": "1",
      "text": "asdasdasdasdas",
      "id": "gu07TZM"
    },
    {
      "articleId": "1",
      "userId": "1",
      "text": "admian",
      "id": "CDv2AbY"
    },
    {
      "articleId": "1",
      "userId": "1",
      "text": "ban",
      "id": "aKqU8H_"
    },
    {
      "articleId": "1",
      "userId": "1",
      "text": "sdfdsf",
      "id": "7bwsTbB"
    },
    {
      "articleId": "1",
      "userId": "1",
      "text": "asdasda",
      "id": "DWY92I4"
    },
    {
      "articleId": "1",
      "userId": "1",
      "text": "asdasd",
      "id": "Ko99MwG"
    },
    {
      "articleId": "1",
      "userId": "1",
      "text": "lol",
      "id": "7K4fpml"
    },
    {
      "articleId": "1",
      "userId": "1",
      "text": "asdasd",
      "id": "_GvM4JG"
    },
    {
      "articleId": "1",
      "userId": "1",
      "text": "asdasd",
      "id": "-nVNd_t"
    },
    {
      "articleId": "1",
      "userId": "1",
      "text": "asss",
      "id": "PVXQgp7"
    },
    {
      "articleId": "1",
      "userId": "1",
      "text": "sss",
      "id": "7NqJzqR"
    },
    {
      "articleId": "1",
      "userId": "1",
      "text": "sdfas",
      "id": "Phz3hYo"
    },
    {
      "articleId": "1",
      "userId": "1",
      "text": "hihihihihi",
      "id": "jpDBxax"
    },
    {
      "articleId": "1",
      "userId": "1",
      "text": " ",
      "id": "yANhoAQ"
    },
    {
      "articleId": "1",
      "userId": "1",
      "text": "asds",
      "id": "GYFFnj7"
    },
    {
      "articleId": "2",
      "userId": "1",
      "text": "ykmf!",
      "id": "HUJ4kBt"
    },
    {
      "articleId": "3",
      "userId": "1",
      "text": "log(n)",
      "id": "c9MOAAk"
    }
  ],
  "users": [
    {
      "id": "1",
      "username": "admin",
      "password": "admin",
      "role": "ADMIN",
      "avatar": "https://img.rasset.ie/001a078c-500.jpg"
    },
    {
      "id": "2",
      "username": "Bogdan",
      "password": "Player-1",
      "role": "USER",
      "avatar": "https://upload.wikimedia.org/wikipedia/en/8/8b/HansGruber.jpeg"
    }
  ],
  "profile": [
    {
      "id": "1",
      "firstName": "Denis",
      "lastName": "Matvienko",
      "age": 29,
      "currency": "RUB",
      "country": "Russia",
      "city": "Saint-P",
      "username": "admin",
      "avatar": "https://img.rasset.ie/001a078c-500.jpg"
    },
    {
      "id": "2",
      "firstName": "Misha",
      "lastName": "Cucik",
      "age": 21,
      "currency": "RUB",
      "country": "Russia",
      "city": "Saint-P",
      "username": "Bogdan",
      "avatar": "https://upload.wikimedia.org/wikipedia/en/8/8b/HansGruber.jpeg"
    }
  ]
}